name: Feature based build and deploy frontend
on:
  workflow_dispatch:
  push:
    branches:
      - deploy/**

jobs:
  front_build:
    name: build & Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Extract branch name
        shell: bash
        run: echo "name=$(echo ${GITHUB_REF#refs/heads/} | sed 's/^deploy\///')" >> $GITHUB_ENV
        id: extract_branch

      - name: Prepare
        id: prep
        run: |
          echo "image=dappforce/subsocial-web-app:postever-${{ env.name }}-$(echo $GITHUB_SHA | head -c7)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        uses: docker/login-action@master
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx

      - name: Build docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: docker/Dockerfile
          push: true
          build-args: |
                  GH_NEXTAUTH_URL=https://${{ env.name }}-post4ever.subsocial.network
                  GH_NEXT_PUBLIC_OFFCHAIN_URL=https://staging-api.subsocial.network
                  GH_SUBSOCIAL_NODE_URL=wss://rco-para.subsocial.network
                  GH_IPFS_URL=https://gw.crustfiles.app
                  GH_NEXT_PUBLIC_AUTH_URL=https://${{ env.name }}-post4ever.subsocial.network
                  GH_NEXT_PUBLIC_AUTH_HEADER=c3ViLTVGQTluUURWZzI2N0RFZDhtMVp5cFhMQm52TjdTRnhZd1Y3bmRxU1lHaU45VFRwdToweDEwMmQ3ZmJhYWQwZGUwNzFjNDFmM2NjYzQzYmQ0NzIxNzFkZGFiYWM0MzEzZTc5YTY3ZWExOWM0OWFlNjgyZjY0YWUxMmRlY2YyNzhjNTEwZGY4YzZjZTZhYzdlZTEwNzY2N2YzYTBjZjM5OGUxN2VhMzAyMmRkNmEyYjc1OTBi 
                  GH_NEXT_PUBLIC_GA_MEASUREMENT_ID=G-FH5CM21YGC
                  GH_TWITTER_CLIENT_ID=${{ secrets.GH_TWITTER_CLIENT_ID }} 
                  GH_TWITTER_CLIENT_SECRET=${{ secrets.GH_TWITTER_CLIENT_SECRET }}
                  GH_TWITTER_BEARER_TOKEN=${{ secrets.GH_TWITTER_BEARER_TOKEN }}
                  GH_NEXTAUTH_SECRET=${{ secrets.GH_NEXTAUTH_SECRET }}
          tags: |
                  ${{ env.image }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache


  deploy:
    name: deploy
    needs: front_build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v3

      - name: Extract branch name
        shell: bash
        run: echo "name=$(echo ${GITHUB_REF#refs/heads/} | sed 's/^deploy\///')" >> $GITHUB_ENV
        id: extract_branch

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN_STAGING }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.K8S_STAGING }}

      - name: Update docker image name
        run: TAG=postever-${{ env.name }}-$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|dappforce/subsocial-web-app:'${TAG}'|' $GITHUB_WORKSPACE/deployment/features/deployment.yaml

      - name: Update svc & ingress file
        run: NAME=${{ env.name }} && sed -i 's|<BRANCH>|'${NAME}'|' $GITHUB_WORKSPACE/deployment/features/all.yaml

      - name: Update deploy file
        run: NAME=${{ env.name }} && sed -i 's|<BRANCH>|'${NAME}'|' $GITHUB_WORKSPACE/deployment/features/deployment.yaml

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/deployment/features/

      - name: Verify deployment
        run: NAME=${{ env.name }} && kubectl -n post-ever rollout status deployment/post-ever-${NAME}

      - name: CF deploy
        run: curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE }}/dns_records"      -H "X-Auth-Email:${{ secrets.CF_MAIL }}"      -H "Authorization:Bearer ${{ secrets.CF_TOKEN }}"      -H "Content-Type:application/json"      --data '{"type":"A","name":"${{ env.name }}-post4ever.subsocial.network","content":"188.166.202.107","ttl":3600,"priority":10,"proxied":true}'
